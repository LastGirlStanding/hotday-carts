#
# Dynatrace Demo CI/CD Pipeline
#

#################################################################
# Global Variables
#################################################################
variables:
  APPLICATION_NAME: carts
  APPLICATION_SHORT_NAME: carts
  kubeconf_file: /tmp/kubeconf

stages:
  - deploy-test
  - deploy-hardening
  - deploy-production
  #- verify  


#################################################################
# Deploy Stage
#################################################################
deploy-cartsdb-in-test:
  image: docker.io/devth/helm:v2.12.3
  stage: deploy-test
  environment:
    name: carts-test
  variables:
    GIT_STRATEGY: fetch
  script:
    - echo ${kube_config} | base64 -d > ${kubeconf_file}
    - export KUBECONFIG=${kubeconf_file}
    - echo ${kube_config} | base64 -d > ${KUBECONFIG}
    - export KUBECONFIG=$KUBECONFIG
    - helm upgrade
      carts-db-${CI_ENVIRONMENT_SLUG}
      --namespace=${CI_ENVIRONMENT_SLUG}
      --install
      --wait
      ./charts/carts-db/ 

deploy-carts-in-test:
  image: docker.io/devth/helm:v2.12.3
  stage: deploy-test
  environment:
    name: carts-test
  variables:
    GIT_STRATEGY: fetch
  script:
    - echo ${kube_config} | base64 -d > ${kubeconf_file}
    - export KUBECONFIG=${kubeconf_file}
    - echo ${kube_config} | base64 -d > ${KUBECONFIG}
    - export KUBECONFIG=$KUBECONFIG
    - helm upgrade
      carts-${CI_ENVIRONMENT_SLUG}
      --namespace=${CI_ENVIRONMENT_SLUG}
      --install
      --wait
      --force
      ./charts/carts/  

deploy-cartsdb-in-hardening:
  image: docker.io/devth/helm:v2.12.3
  stage: deploy-hardening
  environment:
    name: carts-hardening
  variables:
    GIT_STRATEGY: fetch
  script:
    - echo ${kube_config} | base64 -d > ${kubeconf_file}
    - export KUBECONFIG=${kubeconf_file}
    - echo ${kube_config} | base64 -d > ${KUBECONFIG}
    - export KUBECONFIG=$KUBECONFIG
    - helm upgrade
      carts-db-${CI_ENVIRONMENT_SLUG}
      --namespace=${CI_ENVIRONMENT_SLUG}
      --install
      --wait
      ./charts/carts-db/

deploy-carts-in-staging:
  image: docker.io/devth/helm:v2.12.3
  stage: deploy-hardening
  environment:
    name: carts-hardening
  variables:
    GIT_STRATEGY: fetch
  script:
    - echo ${kube_config} | base64 -d > ${kubeconf_file}
    - export KUBECONFIG=${kubeconf_file}
    - echo ${kube_config} | base64 -d > ${KUBECONFIG}
    - export KUBECONFIG=$KUBECONFIG
    - helm upgrade
      carts-${CI_ENVIRONMENT_SLUG}
      --namespace=${CI_ENVIRONMENT_SLUG}
      --install
      --wait
      --force
      ./charts/carts/

generate-load-in-hardening:
  image: docker.io/mvilliger/jmeter-k8s-runner:latest
  stage: deploy-hardening
  environment:
    name: carts-hardening
  variables:
    GIT_STRATEGY: fetch
  script:
    - echo ${kube_config} | base64 -d > ${kubeconf_file}
    - export KUBECONFIG=${kubeconf_file}
    - echo ${kube_config} | base64 -d > ${KUBECONFIG}
    - export KUBECONFIG=$KUBECONFIG
    - export DOMAIN=$(kubectl get cm -n keptn keptn-domain -ojsonpath={.data.app_domain})
    - jmeter -n -t ./jmeter/load.jmx
      -l ${CI_ENVIRONMENT_SLUG}_perf.tlf
      -JSERVER_URL="carts.${CI_ENVIRONMENT_SLUG}.${DOMAIN}"
      -JSERVER_PORT=80
      -JVUCount=10
      -JLoopCount=500
      -JThinkTime=250
      -JDT_LTN="PerfCheck_${CI_COMMIT_SHA}"

deploy-cartsdb-in-production:
  image: docker.io/devth/helm:v2.12.3
  stage: deploy-production
  environment:
    name: carts-production
  variables:
    GIT_STRATEGY: fetch
  script:
    - echo ${kube_config} | base64 -d > ${kubeconf_file}
    - export KUBECONFIG=${kubeconf_file}
    - echo ${kube_config} | base64 -d > ${KUBECONFIG}
    - export KUBECONFIG=$KUBECONFIG
    - helm upgrade
      carts-db-${CI_ENVIRONMENT_SLUG}
      --namespace=${CI_ENVIRONMENT_SLUG}
      --install
      --wait
      ./charts/carts-db/

deploy-carts-in-production:
  image: docker.io/devth/helm:v2.12.3
  stage: deploy-production
  environment:
    name: carts-production
  variables:
    GIT_STRATEGY: fetch
  script:
    - echo ${kube_config} | base64 -d > ${kubeconf_file}
    - export KUBECONFIG=${kubeconf_file}
    - echo ${kube_config} | base64 -d > ${KUBECONFIG}
    - export KUBECONFIG=$KUBECONFIG
    - helm upgrade
      carts-${CI_ENVIRONMENT_SLUG}
      --namespace=${CI_ENVIRONMENT_SLUG}
      --install
      --wait
      --force
      ./charts/carts/  